vector[k] r;
matrix<lower=0>[k, k] Mdist;
}
transformed data {
vector[k] zero;
for (i in 1:k)
zero[i] = 0;
}
parameters {
real beta;
real<lower=0> gamma;
real<lower=0> tau;
vector[k] w;
}
model {
vector[k] lambda_min;
vector[k] lambda_mai;
matrix[k, k] sigmaMat;
beta ~ normal(0, 100);
tau ~ gamma(1, 0.1);
gamma ~ gamma(1, 0.06708);
sigmaMat = (1/tau) * exp(-Mdist/gamma);
w ~ multi_normal(zero, sigmaMat);
for (j in 1:k) {
lambda_min[j] = exp(z[j]*beta + w[j]);
lambda_mai[j] = r[j]*lambda_min[j];
N[j] ~ poisson(lambda_mai[j]);
}
}
generated quantities {
real<lower=0> sigma2 = 1/tau;
}
", file = "Cenário 2 - Discretização/Discr25_Mu0.stan")
data_Discr25_Mu0 <- list(k = k_25, N = N_25, z = z_25, r = r_25, Mdist = Mdist_25)
initf2_25Mu0 <- function(chain_id = 1) {
list(beta = chain_id, gamma = chain_id, tau = chain_id, w = rep(chain_id,25))
}
ModDiscr25_Mu0 <- stan(file = "Cenário 2 - Discretização/Discr25_Mu0.stan",
data = data_Discr25_Mu0,
iter = 20000,
warmup = 5000,
thin = 20,
chains = 2,
init = initf2_25Mu0)
beepr::beep(3)
print(ModDiscr25_Mu0)
res_Discr25_Mu0 <- rstan::extract(ModDiscr25_Mu0)
save.image("Cenário 2 - Discretização/Discr25_Mu0.RData")
# Resultados ---------------------------------------------------------------------------------
estimativas_25 <- data.frame(cbind(beta = c(beta, mean(res_Discr25_Mu0$beta),
median(res_Discr25_Mu0$beta)),
tau = c(tau.sim, mean(res_Discr25_Mu0$tau),
median(res_Discr25_Mu0$tau)),
gamma = c(gamma.sim, mean(res_Discr25_Mu0$gamma),
median(res_Discr25_Mu0$gamma)),
mu = c(mu, mean(res_Discr25_Mu0$mu),
median(res_Discr25_Mu0$mu))),
row.names = c("valor real","média","mediana"))
estimativas_25 %<>% round(digits = 3)
estimativas_25
DFplots_25 <- data.frame(iter = 1:1500,
beta = res_Discr25_Mu0$beta,
mu = res_Discr25_Mu0$mu,
tau = res_Discr25_Mu0$tau,
gamma = res_Discr25_Mu0$gamma)
# w
DFw25 <- data.frame(x = 1:25,
media = apply(res_Discr25_Mu0$w, 2, mean),
inf = apply(res_Discr25_Mu0$w, 2, function(x)
quantile(x, 0.025)),
sup = apply(res_Discr25_Mu0$w, 2, function(x)
quantile(x, 0.975)))
ordem <- c(NULL)
for (i in 1:25) {
ordem <- c(ordem,
(i + (i-1)) + 10*floor((i-1)/5),
(i+1 + (i-1)) + 10*floor((i-1)/5),
(i+10 + (i-1)) + 10*floor((i-1)/5),
(i+11 + (i-1)) + 10*floor((i-1)/5))
}
DFw100 <- data.frame(x = seq(0.125,24.875, length.out = 100),
media = apply(res_1_1_2$w, 2, mean)[ordem],
inf = apply(res_1_1_2$w, 2, function(x)
quantile(x, 0.025))[ordem],
sup = apply(res_1_1_2$w, 2, function(x)
quantile(x, 0.975))[ordem])
ggplot() +
geom_rect(aes(ymin = inf, ymax = sup, xmin = x-1, xmax = x), alpha = 0.4,
data = DFw25) +
geom_errorbar(aes(x = x, ymax = sup, ymin = inf), width = 0, data = DFw100) +
geom_segment(aes(x = x-1, xend = x, y = media, yend = media), data = DFw25,
linetype = "dashed", col = "blue", size = 0.9) +
geom_point(aes(x = x, y = media), size = 2,
data = DFw100, color = "red") +
geom_vline(aes(xintercept = 0:25), linetype = "dashed") +
xlab("Sub-regiões") +
ylab("Intervalo de credibilidade de 95% para w") +
labs(color = "", shape = "") +
scale_shape_manual(values=c(17, 16), labels = c("Média", "Valor real")) +
scale_color_manual(values=c('red','blue'), labels = c("Média", "Valor real")) +
theme_bw() +
theme(legend.position = "top",
axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
load("Cenário 2 - Discretização/Discr25.RData")
estimativas_25
# Resultados ---------------------------------------------------------------------------------
estimativas_25 <- data.frame(cbind(beta = c(beta, mean(res_Discr25$beta),
median(res_Discr25$beta)),
tau = c(tau.sim, mean(res_Discr25$tau),
median(res_Discr25$tau)),
gamma = c(gamma.sim, mean(res_Discr25$gamma),
median(res_Discr25$gamma)),
mu = c(mu, mean(res_Discr25$mu),
median(res_Discr25$mu))),
row.names = c("valor real","média","mediana"))
estimativas_25 %<>% round(digits = 3)
estimativas_25
print(ModDiscr25)
load("Cenário 2 - Discretização/Discr25.RData")
library(MASS)
library(spatstat)
library(matrixcalc)
library(magrittr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggtext)
library(beepr)
library(rstan)
DFplots_25 <- data.frame(iter = 1:1500,
beta = res_Discr25$beta,
mu = res_Discr25$mu,
tau = res_Discr25$tau,
gamma = res_Discr25$gamma)
estimativas_25
# Resultados ---------------------------------------------------------------------------------
estimativas_25 <- data.frame(cbind(beta = c(beta, mean(res_Discr25$beta),
median(res_Discr25$beta)),
tau = c(tau.sim, mean(res_Discr25$tau),
median(res_Discr25$tau)),
gamma = c(gamma.sim, mean(res_Discr25$gamma),
median(res_Discr25$gamma)),
mu = c(mu, mean(res_Discr25$mu),
median(res_Discr25$mu))),
row.names = c("valor real","média","mediana"))
estimativas_25 %<>% round(digits = 3)
estimativas_25
# w
DFw25 <- data.frame(x = 1:25,
media = apply(res_Discr25$w, 2, mean),
inf = apply(res_Discr25$w, 2, function(x)
quantile(x, 0.025)),
sup = apply(res_Discr25$w, 2, function(x)
quantile(x, 0.975)))
ordem <- c(NULL)
for (i in 1:25) {
ordem <- c(ordem,
(i + (i-1)) + 10*floor((i-1)/5),
(i+1 + (i-1)) + 10*floor((i-1)/5),
(i+10 + (i-1)) + 10*floor((i-1)/5),
(i+11 + (i-1)) + 10*floor((i-1)/5))
}
DFw100 <- data.frame(x = seq(0.125,24.875, length.out = 100),
media = apply(res_1_1_2$w, 2, mean)[ordem],
inf = apply(res_1_1_2$w, 2, function(x)
quantile(x, 0.025))[ordem],
sup = apply(res_1_1_2$w, 2, function(x)
quantile(x, 0.975))[ordem])
ggplot() +
geom_rect(aes(ymin = inf, ymax = sup, xmin = x-1, xmax = x), alpha = 0.4,
data = DFw25) +
geom_errorbar(aes(x = x, ymax = sup, ymin = inf), width = 0, data = DFw100) +
geom_segment(aes(x = x-1, xend = x, y = media, yend = media), data = DFw25,
linetype = "dashed", col = "blue", size = 0.9) +
geom_point(aes(x = x, y = media), size = 2,
data = DFw100, color = "red") +
geom_vline(aes(xintercept = 0:25), linetype = "dashed") +
xlab("Sub-regiões") +
ylab("Intervalo de credibilidade de 95% para w") +
labs(color = "", shape = "") +
scale_shape_manual(values=c(17, 16), labels = c("Média", "Valor real")) +
scale_color_manual(values=c('red','blue'), labels = c("Média", "Valor real")) +
theme_bw() +
theme(legend.position = "top",
axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
estimativas_25
ggplot() +
geom_rect(aes(ymin = inf, ymax = sup, xmin = x-1, xmax = x), alpha = 0.4,
data = DFw25) +
geom_errorbar(aes(x = x, ymax = sup, ymin = inf), width = 0, data = DFw100) +
geom_segment(aes(x = x-1, xend = x, y = media, yend = media), data = DFw25,
linetype = "dashed", col = "blue", size = 0.9) +
geom_point(aes(x = x, y = media), size = 2,
data = DFw100, color = "red") +
geom_vline(aes(xintercept = 0:25), linetype = "dashed", size = 2) +
xlab("Sub-regiões") +
ylab("Intervalo de credibilidade de 95%") +
labs(color = "", shape = "") +
scale_shape_manual(values=c(17, 16), labels = c("Média", "Valor real")) +
scale_color_manual(values=c('red','blue'), labels = c("Média", "Valor real")) +
theme_bw() +
theme(legend.position = "top",
axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot() +
geom_rect(aes(ymin = inf, ymax = sup, xmin = x-1, xmax = x), alpha = 0.4,
data = DFw25) +
geom_errorbar(aes(x = x, ymax = sup, ymin = inf), width = 0, data = DFw100) +
geom_segment(aes(x = x-1, xend = x, y = media, yend = media), data = DFw25,
linetype = "dashed", col = "blue", size = 0.9) +
geom_point(aes(x = x, y = media), size = 2,
data = DFw100, color = "red") +
geom_vline(aes(xintercept = 0:25), linetype = "dashed") +
xlab("Sub-regiões") +
ylab("Intervalo de credibilidade de 95%") +
labs(color = "", shape = "") +
scale_shape_manual(values=c(17, 16), labels = c("Média", "Valor real")) +
scale_color_manual(values=c('red','blue'), labels = c("Média", "Valor real")) +
theme_bw() +
theme(legend.position = "top",
axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot() +
geom_rect(aes(ymin = inf, ymax = sup, xmin = x-1, xmax = x), alpha = 0.4,
data = DFw25) +
geom_errorbar(aes(x = x, ymax = sup, ymin = inf), width = 0, data = DFw100) +
geom_segment(aes(x = x-1, xend = x, y = media, yend = media), data = DFw25,
linetype = "dashed", col = "blue", size = 0.9) +
geom_point(aes(x = x, y = media), size = 2,
data = DFw100, color = "red") +
geom_vline(aes(xintercept = 0:25), linetype = "dashed") +
xlab("Sub-regiões") +
ylab("Intervalo de credibilidade de 95%") +
# labs(color = "", shape = "") +
# scale_shape_manual(values=c(17, 16), labels = c("Média", "Valor real")) +
# scale_color_manual(values=c('red','blue'), labels = c("Média", "Valor real")) +
theme_bw() +
theme(legend.position = "top",
axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot() +
geom_rect(aes(ymin = inf, ymax = sup, xmin = x-1, xmax = x), alpha = 0.4,
data = DFw25) +
geom_errorbar(aes(x = x, ymax = sup, ymin = inf), width = 0, data = DFw100) +
geom_segment(aes(x = x-1, xend = x, y = media, yend = media), data = DFw25,
linetype = "dashed", col = "blue", size = 0.9) +
geom_point(aes(x = x, y = media), size = 2,
data = DFw100, color = "red") +
geom_vline(aes(xintercept = 0:25), linetype = "dashed") +
xlab("Sub-regiões") +
ylab("Intervalo de credibilidade de 95%") +
# labs(color = "", shape = "") +
# scale_shape_manual(values=c(17, 16), labels = c("Média", "Valor real")) +
# scale_color_manual(values=c('red','blue'), labels = c("Média", "Valor real")) +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot() +
geom_rect(aes(ymin = inf, ymax = sup, xmin = x-1, xmax = x), alpha = 0.4,
data = DFw25) +
geom_errorbar(aes(x = x, ymax = sup, ymin = inf), width = 0, data = DFw100) +
geom_segment(aes(x = x-1, xend = x, y = media, yend = media), data = DFw25,
linetype = "dashed", col = "blue", size = 0.9) +
geom_point(aes(x = x, y = media), size = 2,
data = DFw100, color = "red") +
geom_vline(aes(xintercept = 0:25), linetype = "dashed") +
xlab("Sub-regiões") +
ylab("Intervalo de credibilidade de 95%") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot() +
geom_rect(aes(ymin = inf, ymax = sup, xmin = x-1, xmax = x), alpha = 0.4,
data = DFw25) +
geom_errorbar(aes(x = x, ymax = sup, ymin = inf), width = 0, data = DFw100) +
geom_segment(aes(x = x-1, xend = x, y = media, yend = media), data = DFw25,
linetype = "dashed", col = "blue", size = 0.7) +
geom_point(aes(x = x, y = media), size = 2,
data = DFw100, color = "red") +
geom_vline(aes(xintercept = 0:25), linetype = "dashed") +
xlab("Sub-regiões") +
ylab("Intervalo de credibilidade de 95%") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot() +
geom_rect(aes(ymin = inf, ymax = sup, xmin = x-1, xmax = x), alpha = 0.4,
data = DFw25) +
geom_errorbar(aes(x = x, ymax = sup, ymin = inf), width = 0, data = DFw100) +
geom_segment(aes(x = x-1, xend = x, y = media, yend = media), data = DFw25,
linetype = "dashed", col = "blue", size = 0.7) +
geom_point(aes(x = x, y = media), size = 2,
data = DFw100, color = "red") +
geom_vline(aes(xintercept = 0:25), linetype = "dashed") +
xlab("Sub-regiões") +
ylab("Intervalo de credibilidade de 95%") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = beta), data = DFplots_25) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = 1.65, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = mu), data = DFplots_25) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = tau), data = DFplots_25) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = 2, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = mu), data = DFplots_25) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = gamma), data = DFplots_25) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = gamma.sim, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
7.67/7.02
10.917/8.098
ggplot(aes(x = gamma), data = DFplots_25) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = gamma.sim, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = tau), data = DFplots_25) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = 2, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = mu), data = DFplots_25) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = beta), data = DFplots_25) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = 1.65, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
save.image("Cenário 2 - Discretização/Discr25.RData")
load("Cenário 1 - Alcance/Mod1Cen1Caso2.RData")
ggplot(aes(x = gamma), data = DFplots) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = gamma.sim, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = tau), data = DFplots) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = 2, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = mu), data = DFplots) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = 0, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = beta), data = DFplots) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = 1.65, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = gamma), data = DFplots) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = gamma.sim, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
ggplot(aes(x = tau), data = DFplots) +
geom_histogram(aes(y = ..density..), color = "black", fill = "grey", bins = 30) +
geom_vline(xintercept = 2, linetype = "dashed", color = "red", size = 2) +
geom_density(alpha = .2, fill="blue") +
xlab("") +
ylab("Densidade") +
theme_bw() +
theme(axis.title.x = element_text(size = rel(1.5)),
legend.text = element_text(size = rel(1.5)),
axis.title.y = element_text(size = rel(1.5)),
axis.text.y = element_text(size = rel(2)),
axis.text.x = element_text(size = rel(2)))
